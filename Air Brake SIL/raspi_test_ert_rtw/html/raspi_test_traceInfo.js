function RTW_rtwnameSIDMap() {
	this.rtwnameHashMap = new Array();
	this.sidHashMap = new Array();
	this.rtwnameHashMap["<Root>"] = {sid: "raspi_test"};
	this.sidHashMap["raspi_test"] = {rtwname: "<Root>"};
	this.rtwnameHashMap["<S1>"] = {sid: "raspi_test:119"};
	this.sidHashMap["raspi_test:119"] = {rtwname: "<S1>"};
	this.rtwnameHashMap["<S2>"] = {sid: "raspi_test:122"};
	this.sidHashMap["raspi_test:122"] = {rtwname: "<S2>"};
	this.rtwnameHashMap["<S3>"] = {sid: "raspi_test:49"};
	this.sidHashMap["raspi_test:49"] = {rtwname: "<S3>"};
	this.rtwnameHashMap["<Root>/ "] = {sid: "raspi_test:26"};
	this.sidHashMap["raspi_test:26"] = {rtwname: "<Root>/ "};
	this.rtwnameHashMap["<Root>/  "] = {sid: "raspi_test:27"};
	this.sidHashMap["raspi_test:27"] = {rtwname: "<Root>/  "};
	this.rtwnameHashMap["<Root>/   "] = {sid: "raspi_test:25"};
	this.sidHashMap["raspi_test:25"] = {rtwname: "<Root>/   "};
	this.rtwnameHashMap["<Root>/Cast To Double"] = {sid: "raspi_test:125"};
	this.sidHashMap["raspi_test:125"] = {rtwname: "<Root>/Cast To Double"};
	this.rtwnameHashMap["<Root>/DIR"] = {sid: "raspi_test:120"};
	this.sidHashMap["raspi_test:120"] = {rtwname: "<Root>/DIR"};
	this.rtwnameHashMap["<Root>/Flap Angle"] = {sid: "raspi_test:32"};
	this.sidHashMap["raspi_test:32"] = {rtwname: "<Root>/Flap Angle"};
	this.rtwnameHashMap["<Root>/GPIO Write"] = {sid: "raspi_test:119"};
	this.sidHashMap["raspi_test:119"] = {rtwname: "<Root>/GPIO Write"};
	this.rtwnameHashMap["<Root>/GPIO Write1"] = {sid: "raspi_test:122"};
	this.sidHashMap["raspi_test:122"] = {rtwname: "<Root>/GPIO Write1"};
	this.rtwnameHashMap["<Root>/I2C Master Read"] = {sid: "raspi_test:124"};
	this.sidHashMap["raspi_test:124"] = {rtwname: "<Root>/I2C Master Read"};
	this.rtwnameHashMap["<Root>/Rotary Position Sensor Transfer Function"] = {sid: "raspi_test:49"};
	this.sidHashMap["raspi_test:49"] = {rtwname: "<Root>/Rotary Position Sensor Transfer Function"};
	this.rtwnameHashMap["<Root>/STEP"] = {sid: "raspi_test:121"};
	this.sidHashMap["raspi_test:121"] = {rtwname: "<Root>/STEP"};
	this.rtwnameHashMap["<Root>/Scope2"] = {sid: "raspi_test:118"};
	this.sidHashMap["raspi_test:118"] = {rtwname: "<Root>/Scope2"};
	this.rtwnameHashMap["<Root>/Scope3"] = {sid: "raspi_test:123"};
	this.sidHashMap["raspi_test:123"] = {rtwname: "<Root>/Scope3"};
	this.rtwnameHashMap["<S1>/In1"] = {sid: "raspi_test:119:9"};
	this.sidHashMap["raspi_test:119:9"] = {rtwname: "<S1>/In1"};
	this.rtwnameHashMap["<S1>/Digital Write"] = {sid: "raspi_test:119:6"};
	this.sidHashMap["raspi_test:119:6"] = {rtwname: "<S1>/Digital Write"};
	this.rtwnameHashMap["<S2>/In1"] = {sid: "raspi_test:122:9"};
	this.sidHashMap["raspi_test:122:9"] = {rtwname: "<S2>/In1"};
	this.rtwnameHashMap["<S2>/Digital Write"] = {sid: "raspi_test:122:6"};
	this.sidHashMap["raspi_test:122:6"] = {rtwname: "<S2>/Digital Write"};
	this.rtwnameHashMap["<S3>/Rotary Position Sensor"] = {sid: "raspi_test:50"};
	this.sidHashMap["raspi_test:50"] = {rtwname: "<S3>/Rotary Position Sensor"};
	this.rtwnameHashMap["<S3>/Closed Value"] = {sid: "raspi_test:51"};
	this.sidHashMap["raspi_test:51"] = {rtwname: "<S3>/Closed Value"};
	this.rtwnameHashMap["<S3>/Open Value"] = {sid: "raspi_test:52"};
	this.sidHashMap["raspi_test:52"] = {rtwname: "<S3>/Open Value"};
	this.rtwnameHashMap["<S3>/Open Angle"] = {sid: "raspi_test:90"};
	this.sidHashMap["raspi_test:90"] = {rtwname: "<S3>/Open Angle"};
	this.rtwnameHashMap["<S3>/Divide"] = {sid: "raspi_test:29"};
	this.sidHashMap["raspi_test:29"] = {rtwname: "<S3>/Divide"};
	this.rtwnameHashMap["<S3>/Multiply1"] = {sid: "raspi_test:31"};
	this.sidHashMap["raspi_test:31"] = {rtwname: "<S3>/Multiply1"};
	this.rtwnameHashMap["<S3>/Subtract"] = {sid: "raspi_test:28"};
	this.sidHashMap["raspi_test:28"] = {rtwname: "<S3>/Subtract"};
	this.rtwnameHashMap["<S3>/Subtract1"] = {sid: "raspi_test:30"};
	this.sidHashMap["raspi_test:30"] = {rtwname: "<S3>/Subtract1"};
	this.rtwnameHashMap["<S3>/Flap Angle"] = {sid: "raspi_test:53"};
	this.sidHashMap["raspi_test:53"] = {rtwname: "<S3>/Flap Angle"};
	this.getSID = function(rtwname) { return this.rtwnameHashMap[rtwname];}
	this.getRtwname = function(sid) { return this.sidHashMap[sid];}
}
RTW_rtwnameSIDMap.instance = new RTW_rtwnameSIDMap();
